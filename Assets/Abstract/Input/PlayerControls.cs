//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.0
//     from Assets/Abstract/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""DefaultPlayer"",
            ""id"": ""ae3cc8ab-50c6-4df8-8877-779c81fcbe86"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""Value"",
                    ""id"": ""58242f3d-d82c-4408-ab24-e331212f2392"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cf2f6a9c-f291-423d-bd88-718296c31fda"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StickLook"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3a8d9176-b17e-4a66-92df-366f18ce5231"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""626e0f56-ec2d-4a79-b2f3-10383d993f8b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseItem"",
                    ""type"": ""Button"",
                    ""id"": ""92b062a8-0346-4b04-bbc3-d03b60d8679d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CycleItem"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c8bb70d1-fd8d-449a-94ea-20109a53f464"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select Slot 1"",
                    ""type"": ""Button"",
                    ""id"": ""65aad6b8-fac3-4a3f-899d-910749db5890"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Slot 2"",
                    ""type"": ""Button"",
                    ""id"": ""61fa3c6d-55c1-4e9a-b2b4-2fef12de2136"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Slot 3"",
                    ""type"": ""Button"",
                    ""id"": ""fd3b3187-fcd7-42f8-81a9-8a067d2812cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""0e39ccb0-3812-4c4e-8d0e-4eed6c5942af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""907998a7-a030-40b3-8294-19e9aa3d83e7"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7cab4b05-d5f5-47ca-b121-51c09bb58dd9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4e0ba1a2-ddcc-4774-b26a-c347f58fff73"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""533b9b6d-309b-413e-a9a4-ce75fe127c56"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e3e94943-bf70-4990-9195-fe999b6fc58d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b7bbd534-7b78-4a59-9156-c2c16699a360"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c18e6c30-30d6-4a80-b6b0-003d13d1eab3"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13e5aa0d-f0fa-46a0-90d2-a89318c49d22"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04f65ea8-3afe-49ac-a75e-a822f894279c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7386272b-4dea-4e33-878e-6f18f4cba8c5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a9987dc-697d-4f2e-9e9e-0003fb4fc41e"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Shoulders"",
                    ""id"": ""5a3ff65d-31a0-4f9e-8923-813621bea73a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleItem"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f5c3dde6-727a-462b-9098-a92d34f527ee"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""69ff75e6-0442-4bc2-af76-3f2bea64149a"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6cc3d606-e59e-4719-aeb6-e8b09d76abc3"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-1,max=1),Invert"",
                    ""groups"": """",
                    ""action"": ""CycleItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11bf0224-7314-4934-8ae1-67dfa418fea8"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Slot 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de31d990-f3a7-4a5f-8f63-1eb2ee8922a2"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Slot 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0fd99094-6948-4350-bab0-87da591ff0e2"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Slot 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42ab4621-87df-43bf-8214-a06524c19790"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Slot 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3ea3cee-64b5-43d1-a4f3-39c216795051"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Slot 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80bade16-a0b2-4d49-8f01-570a77d923ab"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Slot 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d62ed55-d032-4e3c-ad7b-6af230634b58"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd74e37e-c4b5-4e19-bf00-e1f1ebebe703"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32284446-70bb-4cef-b43a-233c32639f37"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone(min=0.125,max=0.925)"",
                    ""groups"": """",
                    ""action"": ""StickLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""TerminalInput"",
            ""id"": ""9f57fb1d-06bf-42ea-b44c-591e36f59940"",
            ""actions"": [
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""515e7de4-f680-491f-86de-ff8b3f2d4175"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""267df40d-728f-4ca5-9738-a99b3e7668fc"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""861f9c82-34c4-4b92-8876-82fdeb0c8b4a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // DefaultPlayer
        m_DefaultPlayer = asset.FindActionMap("DefaultPlayer", throwIfNotFound: true);
        m_DefaultPlayer_Walk = m_DefaultPlayer.FindAction("Walk", throwIfNotFound: true);
        m_DefaultPlayer_Look = m_DefaultPlayer.FindAction("Look", throwIfNotFound: true);
        m_DefaultPlayer_StickLook = m_DefaultPlayer.FindAction("StickLook", throwIfNotFound: true);
        m_DefaultPlayer_Interact = m_DefaultPlayer.FindAction("Interact", throwIfNotFound: true);
        m_DefaultPlayer_UseItem = m_DefaultPlayer.FindAction("UseItem", throwIfNotFound: true);
        m_DefaultPlayer_CycleItem = m_DefaultPlayer.FindAction("CycleItem", throwIfNotFound: true);
        m_DefaultPlayer_SelectSlot1 = m_DefaultPlayer.FindAction("Select Slot 1", throwIfNotFound: true);
        m_DefaultPlayer_SelectSlot2 = m_DefaultPlayer.FindAction("Select Slot 2", throwIfNotFound: true);
        m_DefaultPlayer_SelectSlot3 = m_DefaultPlayer.FindAction("Select Slot 3", throwIfNotFound: true);
        m_DefaultPlayer_Pause = m_DefaultPlayer.FindAction("Pause", throwIfNotFound: true);
        // TerminalInput
        m_TerminalInput = asset.FindActionMap("TerminalInput", throwIfNotFound: true);
        m_TerminalInput_Exit = m_TerminalInput.FindAction("Exit", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // DefaultPlayer
    private readonly InputActionMap m_DefaultPlayer;
    private List<IDefaultPlayerActions> m_DefaultPlayerActionsCallbackInterfaces = new List<IDefaultPlayerActions>();
    private readonly InputAction m_DefaultPlayer_Walk;
    private readonly InputAction m_DefaultPlayer_Look;
    private readonly InputAction m_DefaultPlayer_StickLook;
    private readonly InputAction m_DefaultPlayer_Interact;
    private readonly InputAction m_DefaultPlayer_UseItem;
    private readonly InputAction m_DefaultPlayer_CycleItem;
    private readonly InputAction m_DefaultPlayer_SelectSlot1;
    private readonly InputAction m_DefaultPlayer_SelectSlot2;
    private readonly InputAction m_DefaultPlayer_SelectSlot3;
    private readonly InputAction m_DefaultPlayer_Pause;
    public struct DefaultPlayerActions
    {
        private @PlayerControls m_Wrapper;
        public DefaultPlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_DefaultPlayer_Walk;
        public InputAction @Look => m_Wrapper.m_DefaultPlayer_Look;
        public InputAction @StickLook => m_Wrapper.m_DefaultPlayer_StickLook;
        public InputAction @Interact => m_Wrapper.m_DefaultPlayer_Interact;
        public InputAction @UseItem => m_Wrapper.m_DefaultPlayer_UseItem;
        public InputAction @CycleItem => m_Wrapper.m_DefaultPlayer_CycleItem;
        public InputAction @SelectSlot1 => m_Wrapper.m_DefaultPlayer_SelectSlot1;
        public InputAction @SelectSlot2 => m_Wrapper.m_DefaultPlayer_SelectSlot2;
        public InputAction @SelectSlot3 => m_Wrapper.m_DefaultPlayer_SelectSlot3;
        public InputAction @Pause => m_Wrapper.m_DefaultPlayer_Pause;
        public InputActionMap Get() { return m_Wrapper.m_DefaultPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultPlayerActions set) { return set.Get(); }
        public void AddCallbacks(IDefaultPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_DefaultPlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DefaultPlayerActionsCallbackInterfaces.Add(instance);
            @Walk.started += instance.OnWalk;
            @Walk.performed += instance.OnWalk;
            @Walk.canceled += instance.OnWalk;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @StickLook.started += instance.OnStickLook;
            @StickLook.performed += instance.OnStickLook;
            @StickLook.canceled += instance.OnStickLook;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @UseItem.started += instance.OnUseItem;
            @UseItem.performed += instance.OnUseItem;
            @UseItem.canceled += instance.OnUseItem;
            @CycleItem.started += instance.OnCycleItem;
            @CycleItem.performed += instance.OnCycleItem;
            @CycleItem.canceled += instance.OnCycleItem;
            @SelectSlot1.started += instance.OnSelectSlot1;
            @SelectSlot1.performed += instance.OnSelectSlot1;
            @SelectSlot1.canceled += instance.OnSelectSlot1;
            @SelectSlot2.started += instance.OnSelectSlot2;
            @SelectSlot2.performed += instance.OnSelectSlot2;
            @SelectSlot2.canceled += instance.OnSelectSlot2;
            @SelectSlot3.started += instance.OnSelectSlot3;
            @SelectSlot3.performed += instance.OnSelectSlot3;
            @SelectSlot3.canceled += instance.OnSelectSlot3;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IDefaultPlayerActions instance)
        {
            @Walk.started -= instance.OnWalk;
            @Walk.performed -= instance.OnWalk;
            @Walk.canceled -= instance.OnWalk;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @StickLook.started -= instance.OnStickLook;
            @StickLook.performed -= instance.OnStickLook;
            @StickLook.canceled -= instance.OnStickLook;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @UseItem.started -= instance.OnUseItem;
            @UseItem.performed -= instance.OnUseItem;
            @UseItem.canceled -= instance.OnUseItem;
            @CycleItem.started -= instance.OnCycleItem;
            @CycleItem.performed -= instance.OnCycleItem;
            @CycleItem.canceled -= instance.OnCycleItem;
            @SelectSlot1.started -= instance.OnSelectSlot1;
            @SelectSlot1.performed -= instance.OnSelectSlot1;
            @SelectSlot1.canceled -= instance.OnSelectSlot1;
            @SelectSlot2.started -= instance.OnSelectSlot2;
            @SelectSlot2.performed -= instance.OnSelectSlot2;
            @SelectSlot2.canceled -= instance.OnSelectSlot2;
            @SelectSlot3.started -= instance.OnSelectSlot3;
            @SelectSlot3.performed -= instance.OnSelectSlot3;
            @SelectSlot3.canceled -= instance.OnSelectSlot3;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IDefaultPlayerActions instance)
        {
            if (m_Wrapper.m_DefaultPlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDefaultPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_DefaultPlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DefaultPlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DefaultPlayerActions @DefaultPlayer => new DefaultPlayerActions(this);

    // TerminalInput
    private readonly InputActionMap m_TerminalInput;
    private List<ITerminalInputActions> m_TerminalInputActionsCallbackInterfaces = new List<ITerminalInputActions>();
    private readonly InputAction m_TerminalInput_Exit;
    public struct TerminalInputActions
    {
        private @PlayerControls m_Wrapper;
        public TerminalInputActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Exit => m_Wrapper.m_TerminalInput_Exit;
        public InputActionMap Get() { return m_Wrapper.m_TerminalInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TerminalInputActions set) { return set.Get(); }
        public void AddCallbacks(ITerminalInputActions instance)
        {
            if (instance == null || m_Wrapper.m_TerminalInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_TerminalInputActionsCallbackInterfaces.Add(instance);
            @Exit.started += instance.OnExit;
            @Exit.performed += instance.OnExit;
            @Exit.canceled += instance.OnExit;
        }

        private void UnregisterCallbacks(ITerminalInputActions instance)
        {
            @Exit.started -= instance.OnExit;
            @Exit.performed -= instance.OnExit;
            @Exit.canceled -= instance.OnExit;
        }

        public void RemoveCallbacks(ITerminalInputActions instance)
        {
            if (m_Wrapper.m_TerminalInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITerminalInputActions instance)
        {
            foreach (var item in m_Wrapper.m_TerminalInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_TerminalInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public TerminalInputActions @TerminalInput => new TerminalInputActions(this);
    public interface IDefaultPlayerActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnStickLook(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
        void OnCycleItem(InputAction.CallbackContext context);
        void OnSelectSlot1(InputAction.CallbackContext context);
        void OnSelectSlot2(InputAction.CallbackContext context);
        void OnSelectSlot3(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface ITerminalInputActions
    {
        void OnExit(InputAction.CallbackContext context);
    }
}
